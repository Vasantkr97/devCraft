// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String          @id @default(cuid()) //Primary key
  clerkId                   String          @unique
  email                     String          @unique
  userName                  String       
  isPro                     Boolean         @default(false)
  proSince                  DateTime?
  lemonSqueezyCustomerId    String?
  lemonSqueezyOrderId       String?
  snippets                  Snippet[]
  stars                     Star[]
  codeExecutions            CodeExecution[]
  Comments                  Comments[]
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
}

model CodeExecution {
  id                        String          @id @default(cuid())
  userId                    String
  user                      User            @relation(fields: [userId], references: [id])
  language                  String
  code                      String
  output                    String
  error                     String
  createdAt                 DateTime        @default(now())
  updatedAt                 DateTime        @updatedAt
}

model Snippet {
  id                        String          @id   @default(cuid())
  userId                    String
  user                      User            @relation(fields: [userId], references: [id])
  title                     String
  language                  String
  code                      String
  userName                  String
  comments                  Comments[]
  stars                     Star[]
  createdAt                 DateTime        @default(now())
}

model Comments {
  id                        String          @id @default(cuid())
  snippetId                 String
  snippet                   Snippet         @relation(fields: [snippetId], references: [id])
  userId                    String
  user                      User            @relation(fields: [userId], references: [id])
  userName                  String
  content                   String
  createdAt                 DateTime        @default(now())
}

model Star {
  id                       String           @id @default(cuid())
  userId                   String
  user                     User             @relation(fields: [userId], references: [id])
  snippetId                String
  snippet                  Snippet          @relation(fields: [snippetId], references: [id])
  @@unique([userId, snippetId]) //Ensure that each user can star or like the same snippet only once
}